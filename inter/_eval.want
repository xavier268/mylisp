Test name : TestEval
This file : _eval.want

  0: Input   : 
  0: Parsed  : <nil>
  0: Evalued : <nil>

  1: Input   : 1
  1: Parsed  : 1
  1: Evalued : 1

  2: Input   : (+)
  2: Parsed  : ( + )
  2: Evalued : 0

  3: Input   : (+ 1 )
  3: Parsed  : ( + 1 )
  3: Evalued : 1

  4: Input   : ( + 1 2)
  4: Parsed  : ( + 1 2 )
  4: Evalued : 3

  5: Input   : ( + 1/2 3/4)
  5: Parsed  : ( + 1/2 3/4 )
  5: Evalued : 5/4

  6: Input   : ( + 1 (+ 2/3 1/3 ))
  6: Parsed  : ( + 1 ( + 2/3 1/3 ) )
  6: Evalued : 2

  7: Input   : (+ (+ 1 2) )
  7: Parsed  : ( + ( + 1 2 ) )
  7: Evalued : 3

  8: Input   : '(+ 1 2 )
  8: Parsed  : ( quote ( + 1 2 ) )
  8: Evalued : ( ( + 1 2 ) )

  9: Input   : ( + '1 2 )
  9: Parsed  : ( + ( quote 1 ) 2 )
  9: Evalued : ( error not a number ( ( quote 1 ) 2 ) )

 10: Input   : ( + 1 '2 )
 10: Parsed  : ( + 1 ( quote 2 ) )
 10: Evalued : ( error not a number ( 1 ( quote 2 ) ) )

 11: Input   : ('+ 1 2 ) ; fail as not evaluable
 11: Parsed  : ( ( quote + ) 1 2 )
 11: Evalued : ( error cannot evaluate provided input ( ( quote + ) 1 2 ) )

 12: Input   : ( eval '+) ; fail
 12: Parsed  : ( eval ( quote + ) )
 12: Evalued : ( error cannot evaluate provided input ( ( quote + ) ) )

 13: Input   : ( eval ('+ )); should be ok
 13: Parsed  : ( eval ( ( quote + ) ) )
 13: Evalued : ( error cannot evaluate provided input ( ( ( quote + ) ) ) )

 14: Input   : ( (eval '+) 1 2 ) ; should work
 14: Parsed  : ( ( eval ( quote + ) ) 1 2 )
 14: Evalued : ( error cannot evaluate provided input ( ( eval ( quote + ) ) 1 2 ) )

 15: Input   : (1)
 15: Parsed  : ( 1 )
 15: Evalued : ( error cannot evaluate provided input ( 1 ) )

 16: Input   : ((+ 1 2 ) 3 )
 16: Parsed  : ( ( + 1 2 ) 3 )
 16: Evalued : ( error cannot evaluate provided input ( ( + 1 2 ) 3 ) )

